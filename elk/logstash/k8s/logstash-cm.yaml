apiVersion: v1
kind: ConfigMap
metadata:
  name: logstash-config
  namespace: kube-system
  labels:
    task: logging
    k8s-app: logstash
data:
  logstash.yml: |
    http.host: "0.0.0.0"
    path.config: /usr/share/logstash/pipeline
    xpack.monitoring.enabled: false
  logstash.conf: "
    input {
      beats {
      port => 5044
      type => \"kube-logs\"
      ssl => false
      }
    }
    filter {
      grok{
        match=>{
          \"source\"=>\"%{GREEDYDATA}/%{GREEDYDATA:app}-%{DATA}-%{DATA}_%{DATA:namespace}_%{GREEDYDATA}\"
        }
        add_tag=>[\"k8s-app-extracted\"]
      }
      if [app] == \"nginx-ingress-controller\" {\n
        grok {
          match=>{\n
            \"log\"=>\"%{IP:real_ip} %{DATA:http_host} %{DATA:proxy_protocol_ip} %{DATA:remote_addr} - \\[%{DATA:forwarded_for}\\] - %{DATA:remote_user} \\[%{DATA:ingress_time}\\] \\\"%{WORD:verb} %{NOTSPACE:request} HTTP/%{NUMBER:http_version}\\\" %{NUMBER:result} %{NUMBER:bytes} \\\"%{DATA:referer}\\\" \\\"%{DATA:agent}\\\" %{DATA:request_length} %{DATA:request_time} \\[%{DATA:upstream}\\] %{DATA:upstream_addr} %{NUMBER:upstream_length} %{NUMBER:upstream_time} %{NUMBER:upstream_result}%{SPACE}%{WORD:request_id}\"
          }\n
          add_tag=>[\"ingress-access-log\"]\n
        }
        if \"ingress-access-log\" in [tags] {
          mutate {
            replace => { \"type\" => \"ingress-access\" }
          }
        }
      }\n
    }\n
    output {\n
      elasticsearch {\n
        hosts => [\"logging-elasticsearch.kube-system:9200\"]\n
        sniffing => false\n
        manage_template => false\n
        index => \"%{[type]}-%{+YYYY.MM.dd}\"\n
        document_type => \"%{[@metadata][type]}\"\n
      }\n
    }\n"
